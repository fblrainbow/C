!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
_CSTL_RB_TREE_AUX_H_	cstl_rb_tree_aux.h	24;"	d
_GET_RB_TREE_TYPE_BASENAME	cstl_rb_tree_aux.h	36;"	d
_GET_RB_TREE_TYPE_COPY_FUNCTION	cstl_rb_tree_aux.h	38;"	d
_GET_RB_TREE_TYPE_DESTROY_FUNCTION	cstl_rb_tree_aux.h	40;"	d
_GET_RB_TREE_TYPE_INIT_FUNCTION	cstl_rb_tree_aux.h	37;"	d
_GET_RB_TREE_TYPE_LESS_FUNCTION	cstl_rb_tree_aux.h	39;"	d
_GET_RB_TREE_TYPE_NAME	cstl_rb_tree_aux.h	35;"	d
_GET_RB_TREE_TYPE_SIZE	cstl_rb_tree_aux.h	34;"	d
_GET_RB_TREE_TYPE_STYLE	cstl_rb_tree_aux.h	41;"	d
_create_rb_tree	cstl_rb_tree.c	/^_rb_tree_t* _create_rb_tree(const char* s_typename)$/;"	f
_create_rb_tree_auxiliary	cstl_rb_tree_private.c	/^bool_t _create_rb_tree_auxiliary(_rb_tree_t* pt_rb_tree, const char* s_typename)$/;"	f
_create_rb_tree_iterator	cstl_rb_tree_iterator.c	/^_rb_tree_iterator_t _create_rb_tree_iterator(void)$/;"	f
_rb_tree_anticlockwise_rotation	cstl_rb_tree_aux.c	/^_rbnode_t* _rb_tree_anticlockwise_rotation(_rbnode_t* pt_root)$/;"	f
_rb_tree_assign	cstl_rb_tree.c	/^void _rb_tree_assign(_rb_tree_t* pt_dest, const _rb_tree_t* cpt_src)$/;"	f
_rb_tree_begin	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_begin(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_clear	cstl_rb_tree.c	/^void _rb_tree_clear(_rb_tree_t* pt_rb_tree)$/;"	f
_rb_tree_clockwise_rotation	cstl_rb_tree_aux.c	/^_rbnode_t* _rb_tree_clockwise_rotation(_rbnode_t* pt_root)$/;"	f
_rb_tree_count	cstl_rb_tree.c	/^size_t _rb_tree_count(const _rb_tree_t* cpt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_destroy	cstl_rb_tree.c	/^void _rb_tree_destroy(_rb_tree_t* pt_rb_tree)$/;"	f
_rb_tree_destroy_auxiliary	cstl_rb_tree_private.c	/^void _rb_tree_destroy_auxiliary(_rb_tree_t* pt_rb_tree)$/;"	f
_rb_tree_destroy_subtree	cstl_rb_tree_aux.c	/^_rbnode_t* _rb_tree_destroy_subtree(_rb_tree_t* pt_rb_tree, _rbnode_t* pt_root)$/;"	f
_rb_tree_elem_compare_auxiliary	cstl_rb_tree_aux.c	/^void _rb_tree_elem_compare_auxiliary($/;"	f
_rb_tree_empty	cstl_rb_tree.c	/^bool_t _rb_tree_empty(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_end	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_end(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_equal	cstl_rb_tree.c	/^bool_t _rb_tree_equal(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_equal_range	cstl_rb_tree.c	/^range_t _rb_tree_equal_range(const _rb_tree_t* cpt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_erase	cstl_rb_tree.c	/^size_t _rb_tree_erase(_rb_tree_t* pt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_erase_pos	cstl_rb_tree.c	/^void _rb_tree_erase_pos(_rb_tree_t* pt_rb_tree, _rb_tree_iterator_t it_pos)$/;"	f
_rb_tree_erase_range	cstl_rb_tree.c	/^void _rb_tree_erase_range(_rb_tree_t* pt_rb_tree, _rb_tree_iterator_t it_begin, _rb_tree_iterator_t it_end)$/;"	f
_rb_tree_find	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_find(const _rb_tree_t* cpt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_find_value	cstl_rb_tree_aux.c	/^_rbnode_t* _rb_tree_find_value(const _rb_tree_t* cpt_rb_tree, const _rbnode_t* cpt_root, const void* cpv_value)$/;"	f
_rb_tree_fixup_deletion	cstl_rb_tree_aux.c	/^void _rb_tree_fixup_deletion(_rb_tree_t* pt_rb_tree, _rbnode_t* pt_pos, _rbnode_t* pt_parent)$/;"	f
_rb_tree_get_color	cstl_rb_tree_aux.c	/^_color_t _rb_tree_get_color(const _rbnode_t* cpt_root)$/;"	f
_rb_tree_get_max_rbnode	cstl_rb_tree_aux.c	/^_rbnode_t* _rb_tree_get_max_rbnode(const _rbnode_t* cpt_root)$/;"	f
_rb_tree_get_min_rbnode	cstl_rb_tree_aux.c	/^_rbnode_t* _rb_tree_get_min_rbnode(const _rbnode_t* cpt_root)$/;"	f
_rb_tree_greater	cstl_rb_tree.c	/^bool_t _rb_tree_greater(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_greater_equal	cstl_rb_tree.c	/^bool_t _rb_tree_greater_equal(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_init	cstl_rb_tree.c	/^void _rb_tree_init(_rb_tree_t* pt_rb_tree, bfun_t t_compare)$/;"	f
_rb_tree_init_copy	cstl_rb_tree.c	/^void _rb_tree_init_copy(_rb_tree_t* pt_dest, const _rb_tree_t* cpt_src)$/;"	f
_rb_tree_init_copy_equal_array	cstl_rb_tree.c	/^void _rb_tree_init_copy_equal_array(_rb_tree_t* pt_dest, const void* cpv_array, size_t t_count)$/;"	f
_rb_tree_init_copy_equal_array_ex	cstl_rb_tree.c	/^void _rb_tree_init_copy_equal_array_ex($/;"	f
_rb_tree_init_copy_equal_range	cstl_rb_tree.c	/^void _rb_tree_init_copy_equal_range(_rb_tree_t* pt_dest, iterator_t it_begin, iterator_t it_end)$/;"	f
_rb_tree_init_copy_equal_range_ex	cstl_rb_tree.c	/^void _rb_tree_init_copy_equal_range_ex($/;"	f
_rb_tree_init_copy_unique_array	cstl_rb_tree.c	/^void _rb_tree_init_copy_unique_array(_rb_tree_t* pt_dest, const void* cpv_array, size_t t_count)$/;"	f
_rb_tree_init_copy_unique_array_ex	cstl_rb_tree.c	/^void _rb_tree_init_copy_unique_array_ex($/;"	f
_rb_tree_init_copy_unique_range	cstl_rb_tree.c	/^void _rb_tree_init_copy_unique_range(_rb_tree_t* pt_dest, iterator_t it_begin, iterator_t it_end)$/;"	f
_rb_tree_init_copy_unique_range_ex	cstl_rb_tree.c	/^void _rb_tree_init_copy_unique_range_ex($/;"	f
_rb_tree_init_elem_auxiliary	cstl_rb_tree_aux.c	/^void _rb_tree_init_elem_auxiliary(_rb_tree_t* pt_rb_tree, _rbnode_t* pt_node)$/;"	f
_rb_tree_insert_equal	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_insert_equal(_rb_tree_t* pt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_insert_equal_array	cstl_rb_tree.c	/^void _rb_tree_insert_equal_array(_rb_tree_t* pt_rb_tree, const void* cpv_array, size_t t_count)$/;"	f
_rb_tree_insert_equal_range	cstl_rb_tree.c	/^void _rb_tree_insert_equal_range(_rb_tree_t* pt_rb_tree, iterator_t it_begin, iterator_t it_end)$/;"	f
_rb_tree_insert_rbnode	cstl_rb_tree_aux.c	/^_rbnode_t* _rb_tree_insert_rbnode(_rb_tree_t* pt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_insert_unique	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_insert_unique(_rb_tree_t* pt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_insert_unique_array	cstl_rb_tree.c	/^void _rb_tree_insert_unique_array(_rb_tree_t* pt_rb_tree, const void* cpv_array, size_t t_count)$/;"	f
_rb_tree_insert_unique_range	cstl_rb_tree.c	/^void _rb_tree_insert_unique_range(_rb_tree_t* pt_rb_tree, iterator_t it_begin, iterator_t it_end)$/;"	f
_rb_tree_is_created	cstl_rb_tree_aux.c	/^bool_t _rb_tree_is_created(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_is_inited	cstl_rb_tree_aux.c	/^bool_t _rb_tree_is_inited(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_iterator_before	cstl_rb_tree_iterator.c	/^bool_t _rb_tree_iterator_before(_rb_tree_iterator_t it_first, _rb_tree_iterator_t it_second)$/;"	f
_rb_tree_iterator_belong_to_rb_tree	cstl_rb_tree_aux.c	/^bool_t _rb_tree_iterator_belong_to_rb_tree(const _rb_tree_t* cpt_rb_tree, _rb_tree_iterator_t it_iter)$/;"	f
_rb_tree_iterator_distance	cstl_rb_tree_iterator.c	/^int _rb_tree_iterator_distance(_rb_tree_iterator_t it_first, _rb_tree_iterator_t it_second)$/;"	f
_rb_tree_iterator_equal	cstl_rb_tree_iterator.c	/^bool_t _rb_tree_iterator_equal(_rb_tree_iterator_t it_first, _rb_tree_iterator_t it_second)$/;"	f
_rb_tree_iterator_get_pointer	cstl_rb_tree_iterator.c	/^const void* _rb_tree_iterator_get_pointer(_rb_tree_iterator_t it_iter)$/;"	f
_rb_tree_iterator_get_pointer_ignore_cstr	cstl_rb_tree_iterator.c	/^const void* _rb_tree_iterator_get_pointer_ignore_cstr(_rb_tree_iterator_t it_iter)$/;"	f
_rb_tree_iterator_get_value	cstl_rb_tree_iterator.c	/^void _rb_tree_iterator_get_value(_rb_tree_iterator_t it_iter, void* pv_value)$/;"	f
_rb_tree_iterator_next	cstl_rb_tree_iterator.c	/^_rb_tree_iterator_t _rb_tree_iterator_next(_rb_tree_iterator_t it_iter)$/;"	f
_rb_tree_iterator_prev	cstl_rb_tree_iterator.c	/^_rb_tree_iterator_t _rb_tree_iterator_prev(_rb_tree_iterator_t it_iter)$/;"	f
_rb_tree_key_comp	cstl_rb_tree.c	/^bfun_t _rb_tree_key_comp(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_less	cstl_rb_tree.c	/^bool_t _rb_tree_less(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_less_equal	cstl_rb_tree.c	/^bool_t _rb_tree_less_equal(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_lower_bound	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_lower_bound(const _rb_tree_t* cpt_rb_tree, const void* cpv_value)$/;"	f
_rb_tree_max_size	cstl_rb_tree.c	/^size_t _rb_tree_max_size(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_not_equal	cstl_rb_tree.c	/^bool_t _rb_tree_not_equal(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_rbegin	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_rbegin(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_rbnode_belong_to_rb_tree	cstl_rb_tree_aux.c	/^bool_t _rb_tree_rbnode_belong_to_rb_tree(const _rbnode_t* cpt_root, const _rbnode_t* cpt_pos)$/;"	f
_rb_tree_rebalance	cstl_rb_tree_aux.c	/^void _rb_tree_rebalance(_rb_tree_t* pt_rb_tree, _rbnode_t* pt_pos)$/;"	f
_rb_tree_rend	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_rend(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_same_iterator_type	cstl_rb_tree_aux.c	/^bool_t _rb_tree_same_iterator_type(const _rb_tree_t* cpt_rb_tree, iterator_t it_iter)$/;"	f
_rb_tree_same_rb_tree_iterator_type	cstl_rb_tree_aux.c	/^bool_t _rb_tree_same_rb_tree_iterator_type(const _rb_tree_t* cpt_rb_tree, _rb_tree_iterator_t it_iter)$/;"	f
_rb_tree_same_rb_tree_iterator_type_ex	cstl_rb_tree_aux.c	/^bool_t _rb_tree_same_rb_tree_iterator_type_ex(const _rb_tree_t* cpt_rb_tree, _rb_tree_iterator_t it_iter)$/;"	f
_rb_tree_same_type	cstl_rb_tree_aux.c	/^bool_t _rb_tree_same_type(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_same_type_ex	cstl_rb_tree_aux.c	/^bool_t _rb_tree_same_type_ex(const _rb_tree_t* cpt_first, const _rb_tree_t* cpt_second)$/;"	f
_rb_tree_size	cstl_rb_tree.c	/^size_t _rb_tree_size(const _rb_tree_t* cpt_rb_tree)$/;"	f
_rb_tree_swap	cstl_rb_tree.c	/^void _rb_tree_swap(_rb_tree_t* pt_first, _rb_tree_t* pt_second)$/;"	f
_rb_tree_upper_bound	cstl_rb_tree.c	/^_rb_tree_iterator_t _rb_tree_upper_bound(const _rb_tree_t* cpt_rb_tree, const void* cpv_value)$/;"	f
